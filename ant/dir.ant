<?xml version="1.0" encoding="UTF-8" ?>

<!-- manages the directory structure for the build process.

	This means it creates all the temporary directories and copies files between them.
	It is also responsible for cleaning up the whole mess afterwards. -->

<project name="dir">
	
	<!-- create the required directories -->
	<target name="mkdirs">
		<mkdir dir="${build.home}" />
		<mkdir dir="${build.home}/classes" />
		<mkdir dir="${dist.home}" />
		<mkdir dir="${dist.home}/Plugins" />
	</target>
	
	<!-- more or less the reverse of it, delete all the directories again -->
	<target name="clean" description="remove all auto-generated files" >
		<!--delete dir="${build.home}/classes" /-->
		<delete includeemptydirs="true">
			<fileset dir="${build.home}" includes="**/*.class"/>
		</delete>
		<!--delete dir="${dist.home}" /-->
		<delete includeemptydirs="true">
			<fileset dir="${dist.home}" includes="*.jar"/>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dist.home}/Plugins" includes="*.jar"/>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dist.home}" includes="*.zip"/>
		</delete>
	</target>
	
	<!-- copy everything that needs to be in the .war -->
	<target name="copyjars" depends="mkdirs" >
		
		<!-- copy required libraries -->
		<copy todir="${dist.home}/Components/Bin">
			<fileset dir="${lib.home}" includes="BibRefUtils.jar" />
		</copy>
		
		<!-- copy required libraries -->
		<copy todir="${dist.home}/Components/GgServerIMIData/PdfImporterData">
			
			<!-- install base JARs -->
			<fileset dir="${lib.home}" includes="StringUtils.jar" />
			<fileset dir="${lib.home}" includes="HtmlXmlUtil.jar" />
			<fileset dir="${lib.home}" includes="Gamta.jar" />
			<fileset dir="${lib.home}" includes="mail.jar" />
			<fileset dir="${lib.home}" includes="EasyIO.jar" />
			<fileset dir="${lib.home}" includes="GamtaImagingAPI.jar" />
			<fileset dir="${lib.home}" includes="BibRefUtils.jar" />
			
			<!-- install image markup and OCR JARs -->
			<fileset dir="${lib.home}" includes="ImageMarkup.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkup.bin.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkupOCR.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkupOCR.bin.jar" />
			
			<!-- install PDF decoder JARs -->
			<fileset dir="${lib.home}" includes="icepdf-core.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkupPDF.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkupPDF.bin.jar" />
		</copy>
		
		<!-- copy required libraries -->
		<copy todir="${dist.home}/Components/GgServerIMPData">
			
			<!-- base JARs -->
			<fileset dir="${lib.home}" includes="StringUtils.jar" />
			<fileset dir="${lib.home}" includes="HtmlXmlUtil.jar" />
			<fileset dir="${lib.home}" includes="Gamta.jar" />
			<fileset dir="${lib.home}" includes="mail.jar" />
			<fileset dir="${lib.home}" includes="EasyIO.jar" />
			<fileset dir="${lib.home}" includes="GamtaImagingAPI.jar" />
			<fileset dir="${lib.home}" includes="GamtaFeedbackAPI.jar" />
			
			<!-- image markup and OCR JARs -->
			<fileset dir="${lib.home}" includes="ImageMarkup.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkup.bin.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkupOCR.jar" />
			
			<!-- PDF decoder JARs -->
			<fileset dir="${lib.home}" includes="icepdf-core.jar" />
			<fileset dir="${lib.home}" includes="ImageMarkupPDF.jar" />
			
			<!-- GG Imagine JARs -->
			<fileset dir="${lib.home}" includes="GoldenGATE.jar" />
			<fileset dir="${lib.home}" includes="GgImagine.jar" />
		</copy>
	</target>
</project>